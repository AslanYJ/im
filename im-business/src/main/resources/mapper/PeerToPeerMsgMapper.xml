<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yjlan.im.business.mapper.PeerToPeerMsgMapper">
  <resultMap id="BaseResultMap" type="com.yjlan.im.business.entity.PeerToPeerMsg">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="sender_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="receiver_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_readed" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_update" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yjlan.im.business.entity.PeerToPeerMsg">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="sender_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="receiver_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_readed" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="gmt_create" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="gmt_update" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="send_content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, sender_id, receiver_id, is_readed, gmt_create, gmt_update
  </sql>
  <sql id="Blob_Column_List">
    send_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from peer_to_peer_msg
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from peer_to_peer_msg
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yjlan.im.business.entity.PeerToPeerMsg">
    insert into peer_to_peer_msg (id, sender_id, receiver_id, 
      is_readed, gmt_create, gmt_update, 
      send_content)
    values (#{id,jdbcType=BIGINT}, #{senderId,jdbcType=BIGINT}, #{receiverId,jdbcType=BIGINT}, 
      #{isReaded,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtUpdate,jdbcType=TIMESTAMP}, 
      #{sendContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yjlan.im.business.entity.PeerToPeerMsg">
    insert into peer_to_peer_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="receiverId != null">
        receiver_id,
      </if>
      <if test="isReaded != null">
        is_readed,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtUpdate != null">
        gmt_update,
      </if>
      <if test="sendContent != null">
        send_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null">
        #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="isReaded != null">
        #{isReaded,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="sendContent != null">
        #{sendContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yjlan.im.business.entity.PeerToPeerMsg">
    update peer_to_peer_msg
    <set>
      <if test="senderId != null">
        sender_id = #{senderId,jdbcType=BIGINT},
      </if>
      <if test="receiverId != null">
        receiver_id = #{receiverId,jdbcType=BIGINT},
      </if>
      <if test="isReaded != null">
        is_readed = #{isReaded,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdate != null">
        gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="sendContent != null">
        send_content = #{sendContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yjlan.im.business.entity.PeerToPeerMsg">
    update peer_to_peer_msg
    set sender_id = #{senderId,jdbcType=BIGINT},
      receiver_id = #{receiverId,jdbcType=BIGINT},
      is_readed = #{isReaded,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP},
      send_content = #{sendContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yjlan.im.business.entity.PeerToPeerMsg">
    update peer_to_peer_msg
    set sender_id = #{senderId,jdbcType=BIGINT},
      receiver_id = #{receiverId,jdbcType=BIGINT},
      is_readed = #{isReaded,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_update = #{gmtUpdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>